pipeline { 
    agent any 
    environment { 
        CODE_DIRECTORY = "C:/Users/lokesh r/Documents/Jenkinsfile.txt" 
        TEST_ENV = "testing" 
        PROD_ENV = "Lokesh" 
        NOTIFICATION_EMAIL = "lokeshravichandran59@gmail.com"  
        LOG_FILE = "build_logs.txt"  // Define the log file
    } 
    stages { 
        stage('Build') { 
            steps { 
                script {
                    // Redirect the console output to the log file
                    sh "echo 'Fetching the source code from: $CODE_DIRECTORY' > $LOG_FILE"
                    sh "echo 'Compiling the code and generating artifacts' >> $LOG_FILE"
                    // Add actual build steps here
                }
            } 
        } 
        stage('Unit and Integration Tests') { 
            steps { 
                script {
                    // Append test logs to the log file
                    sh "echo 'Running unit tests' >> $LOG_FILE"
                    sh "echo 'Running integration tests' >> $LOG_FILE"
                    // Add actual test steps here 
                }
            } 
            post { 
                success { 
                    emailext to: "${env.NOTIFICATION_EMAIL}", 
                         subject: "Unit and Integration Tests Passed", 
                         body: "Unit and Integration Tests have passed successfully. See attached logs for details.\nConsole Output: ${env.BUILD_URL}console", 
                         mimeType: 'text/html', 
                         attachments: "${env.WORKSPACE}/${env.LOG_FILE}"  // Attach the log file
                } 
                failure { 
                    emailext to: "${env.NOTIFICATION_EMAIL}", 
                         subject: "Unit and Integration Tests Failed", 
                         body: "Unit and Integration Tests have failed. See attached logs for details.\nConsole Output: ${env.BUILD_URL}console", 
                         mimeType: 'text/html', 
                         attachments: "${env.WORKSPACE}/${env.LOG_FILE}"  // Attach the log file
                } 
            } 
        } 
        stage('Code Analysis') { 
            steps { 
                script {
                    // Append code analysis logs to the log file
                    sh "echo 'Checking the quality of the code' >> $LOG_FILE"
                    // Add actual code quality check steps here 
                }
            } 
        } 
        stage('Security Scan') { 
            steps { 
                script {
                    // Append security scan logs to the log file
                    sh "echo 'Performing security scan' >> $LOG_FILE"
                    // Add actual security scan steps here 
                }
            } 
            post { 
                success { 
                    emailext to: "${env.NOTIFICATION_EMAIL}", 
                         subject: "Security Scan Passed", 
                         body: "Security scan completed without any vulnerabilities. See attached logs for details.\nConsole Output: ${env.BUILD_URL}console", 
                         mimeType: 'text/html', 
                         attachments: "${env.WORKSPACE}/${env.LOG_FILE}"  // Attach the log file
                } 
                failure { 
                    emailext to: "${env.NOTIFICATION_EMAIL}", 
                         subject: "Security Scan Failed", 
                         body: "Security scan detected vulnerabilities. See attached logs for details.\nConsole Output: ${env.BUILD_URL}console", 
                         mimeType: 'text/html', 
                         attachments: "${env.WORKSPACE}/${env.LOG_FILE}"  // Attach the log file
                } 
            } 
        } 
        stage('Deploy to Staging') { 
            steps { 
                script {
                    // Append deployment logs to the log file
                    sh "echo 'Deploying the application to the $TEST_ENV environment' >> $LOG_FILE"
                    // Add actual staging deployment steps here 
                }
            } 
        } 
        stage('Integration Tests on Staging') { 
            steps { 
                script {
                    // Append integration test logs to the log file
                    sh "echo 'Running integration tests on staging environment' >> $LOG_FILE"
                    // Add actual integration tests on staging steps here 
                }
            } 
        } 
        stage('Deploy to Production') { 
            steps { 
                script {
                    // Append production deployment logs to the log file
                    sh "echo 'Deploying the code to the $PROD_ENV environment' >> $LOG_FILE"
                    // Add actual production deployment steps here 
                }
            } 
        } 
    } 
 
    post { 
        always { 
            emailext ( 
                subject: "Pipeline Status: ${currentBuild.result}", 
                body: '''<html> 
                <body> 
                <p>Build Status: ${currentBuild.result}</p> 
                <p>Build Number: ${currentBuild.number}</p> 
                <p>Console Output: <a 
                href="${env.BUILD_URL}console">${env.BUILD_URL}console</a></p> 
                </body> 
                </html>''', 
                to: 'lokeshravichandran59@gmail.com', 
                from: 'jenkins@example.com', 
                replyTo: 'jenkins@example.com', 
                mimeType: 'text/html',
                attachments: "${env.WORKSPACE}/${env.LOG_FILE}"  // Attach the log file
            ) 
        } 
    } 
}
